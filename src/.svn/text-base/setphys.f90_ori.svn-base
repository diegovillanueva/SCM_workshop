#ifdef __xlC__
@PROCESS STRICT
#endif
!>
!! @par Copyright
!! This code is subject to the MPI-M-Software - License - Agreement in it's most recent form.
!! Please see URL http://www.mpimet.mpg.de/en/science/models/model-distribution.html and the
!! file COPYING in the root of the source tree for this code.
!! Where software is supplied by third parties, it is indicated in the headers of the routines.
!!
SUBROUTINE setphys

  !
  ! preset physical constants and process according namelist 
  !
  ! M. Jarraud, ECMWF, December 1982, original version
  ! A. Tompkins, MPI, April 2000, added LUTs for cover
  ! L. Kornblueh, MPI, April 2003, moved calculation of convection parameterization LUTs to mo_convect_tables
  ! U. Schlese, M.Esch June 2007, added volcanic aerosol
  !
  ! This subroutine preset ,modifies and derive
  ! constants in modules used in the parameterization
  ! of diabatic processes except the constants internal
  ! to the radiation "black box".
  !

  USE mo_kind,           ONLY: dp 
  USE mo_mpi,            ONLY: p_io, p_parallel, p_parallel_io, p_bcast  
  USE mo_control,        ONLY: nn, l_volc, ngl
  USE mo_param_switches, ONLY: lphys, lrad, lvdiff, lcond, lsurf,  &
                               lconv, lgwdrag, lice, lconvmassfix
  USE mo_echam_conv_constants,   ONLY: lmfpen, lmfscv, lmfmid, lmfdd, lmfdudv
  USE mo_echam_convect_tables, ONLY: init_convect_tables  
  USE mo_namelist,       ONLY: open_nml, position_nml, POSITIONED
  USE mo_exception,      ONLY: finish, message, message_text
  USE mo_volc_data,      ONLY: jpd, aod, reff, extrat, ssa, asym, init_volc_tables, read_volc_data
  USE mo_surface_ice,    ONLY: init_albedo_ice

  IMPLICIT NONE

  INCLUDE 'physctl.inc'

  REAL(dp) :: zq, zx

  INTEGER :: it, iq
  INTEGER :: ierr, inml, iunit   ! error return value from position_nml

  REAL(dp), EXTERNAL :: betai

  !     ------------------------------------------------------------
  !
  !*        1.       preset constants.
  !                  ------ ----------
  !
  !*        1.2      preset constants in MO_PARAM_SWITCHES.
  !
  lphys   = .TRUE.
  lrad    = .TRUE.
  lvdiff  = .TRUE.
  lconv   = .TRUE.
  lcond   = .TRUE.
  lsurf   = .TRUE.
  lmfpen  = .TRUE.
  lmfscv  = .TRUE.
  lmfmid  = .TRUE.
  lmfdd   = .TRUE.
  lmfdudv = .TRUE.
  lgwdrag = .TRUE.
  lice    = .TRUE.
  lconvmassfix = .TRUE.
  !
  !
  !*         1.3     Initialise lookup tables for CUADJTQ
  !
  CALL init_convect_tables
  !
  !*         1.5     Initialise lookup tables for aerosol radiation parameters
  !
  IF(l_volc) THEN
    ALLOCATE ( aod(ngl,0:jpd+1))
    ALLOCATE (reff(ngl,0:jpd+1))
    CALL message('','l_volc =.TRUE.  --> volcanic forcing on')
    IF (p_parallel_io) THEN    
      CALL init_volc_tables
    ENDIF
    IF (p_parallel) THEN
       CALL p_bcast (extrat, p_io)
       CALL p_bcast (ssa, p_io)
       CALL p_bcast (asym, p_io)
    ENDIF
    IF (p_parallel_io) THEN
       CALL read_volc_data
    ENDIF
    IF (p_parallel) THEN
       CALL p_bcast (aod, p_io)
       CALL p_bcast (reff, p_io)
    ENDIF
  ELSE
    CALL message('','l_volc =.FALSE.  --> volcanic forcing off')
  ENDIF
  !
  !     ------------------------------------------------------------
  !
  !*        2.       READ NAMELIST.
  !                  ---- ---------
  !
  IF (p_parallel_io) THEN
    inml = open_nml('namelist.echam')
     iunit = position_nml ('PHYSCTL', inml, status=ierr)
     SELECT CASE (ierr)
     CASE (POSITIONED)
       READ (iunit, physctl)
     END SELECT
  ENDIF
  IF (p_parallel) THEN
     CALL p_bcast (lphys, p_io)
     CALL p_bcast (lrad, p_io)
     CALL p_bcast (lvdiff, p_io)
     CALL p_bcast (lcond, p_io)
     CALL p_bcast (lsurf, p_io)
     CALL p_bcast (lconv, p_io)
     CALL p_bcast (lmfpen, p_io)
     CALL p_bcast (lgwdrag, p_io)
     CALL p_bcast (lice, p_io)
     CALL p_bcast (lconvmassfix, p_io)
  ENDIF
!
!     ------------------------------------------------------------
!
!*        3.       MODIFY CONSTANTS.
!                  ------ ----------
!
!*        3.1      MODIFY CONSTANTS IN *mo_param_switches*.
!
  IF(.NOT.lphys) THEN
     lrad=.FALSE.
     lvdiff=.FALSE.
     lgwdrag=.FALSE.
     lconv=.FALSE.
     lcond=.FALSE.
     lsurf=.FALSE.
     lice=.FALSE.
  ELSE
     CALL message('',' Cloud cover scheme: diagnostic (Sundqvist)')
  END IF
!
  IF(.NOT.lconv) THEN
     lmfpen=.FALSE.
     lmfscv=.FALSE.
     lmfmid=.FALSE.
     lmfdd=.FALSE.
     lmfdudv=.FALSE.
  ELSE
     CALL message('',' Convection: Nordeng (default)')
  ENDIF
!
  IF(.NOT.lmfpen) THEN
     lconv=.FALSE.
     lmfscv=.FALSE.
     lmfmid=.FALSE.
     lmfdd=.FALSE.
     lmfdudv=.FALSE.
  END IF
!
!
!*        3.2      SET UP CONSTANTS IN *mo_physc2*.
!
  CALL iniphy
!
!*        3.3      Define albedo parameters depending on resolution
!
  CALL init_albedo_ice
!
END SUBROUTINE setphys

!-----------------------------------------------------------------------

