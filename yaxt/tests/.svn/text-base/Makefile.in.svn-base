# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Keywords:
# Maintainer: JÃ¶rg Behrens <behrens@dkrz.de>
#             Moritz Hanke <hanke@dkrz.de>
#             Thomas Jahns <jahns@dkrz.de>
# URL: https://doc.redmine.dkrz.de/yaxt/html/
#
# Redistribution and use in source and binary forms, with or without
# modification, are  permitted provided that the following conditions are
# met:
#
# Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# Neither the name of the DKRZ GmbH nor the names of its contributors
# may be used to endorse or promote products derived from this software
# without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#


VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
noinst_PROGRAMS = test_mpi_generate_datatype$(EXEEXT) \
	test_mpi_smartdedup$(EXEEXT) test_exchanger_parallel$(EXEEXT) \
	test_handles$(EXEEXT) test_idxempty$(EXEEXT) \
	test_idxempty_f$(EXEEXT) test_idxvec$(EXEEXT) \
	test_idxvec_f$(EXEEXT) test_idxlist_collection$(EXEEXT) \
	test_idxlist_collection_f$(EXEEXT) test_idxmod$(EXEEXT) \
	test_idxmod_f$(EXEEXT) test_idxsection$(EXEEXT) \
	test_idxsection_f$(EXEEXT) test_idxstripes$(EXEEXT) \
	test_idxstripes_f$(EXEEXT) test_redist_collection$(EXEEXT) \
	test_redist_collection_f$(EXEEXT) \
	test_redist_collection_parallel$(EXEEXT) \
	test_redist_collection_parallel_f$(EXEEXT) \
	test_redist_collection_static$(EXEEXT) \
	test_redist_collection_static_f$(EXEEXT) \
	test_redist_collection_static_parallel$(EXEEXT) \
	test_redist_collection_static_parallel_f$(EXEEXT) \
	test_redist_p2p$(EXEEXT) test_redist_p2p_f$(EXEEXT) \
	test_redist_p2p_parallel$(EXEEXT) \
	test_redist_p2p_parallel_f$(EXEEXT) \
	test_redist_repeat$(EXEEXT) test_redist_repeat_f$(EXEEXT) \
	test_redist_repeat_parallel$(EXEEXT) \
	test_redist_repeat_parallel_f$(EXEEXT) \
	test_xmap_all2all$(EXEEXT) test_xmap_all2all_f$(EXEEXT) \
	test_xmap_all2all_fail$(EXEEXT) \
	test_xmap_all2all_fail_f$(EXEEXT) \
	test_xmap_all2all_parallel$(EXEEXT) \
	test_xmap_all2all_parallel_f$(EXEEXT) \
	test_xmap_dist_dir$(EXEEXT) test_xmap_dist_dir_f$(EXEEXT) \
	test_xmap_dist_dir_parallel$(EXEEXT) \
	test_xmap_dist_dir_parallel_f$(EXEEXT) \
	test_xmap_intersection_parallel$(EXEEXT) \
	test_xmap_intersection_parallel_f$(EXEEXT) \
	test_initialized_finalized$(EXEEXT) \
	test_initialized_finalized_f$(EXEEXT) test_ut$(EXEEXT) \
	test_perf$(EXEEXT) test_perf_stripes$(EXEEXT) \
	test_sort$(EXEEXT) test_uid$(EXEEXT) test_yaxt$(EXEEXT)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/test_exchanger_parallel_run.in \
	$(srcdir)/test_exported_symbols.in \
	$(srcdir)/test_handles_run.in $(srcdir)/test_idxempty_run.in \
	$(srcdir)/test_idxlist_collection_run.in \
	$(srcdir)/test_idxmod_run.in $(srcdir)/test_idxsection_run.in \
	$(srcdir)/test_idxstripes_run.in $(srcdir)/test_idxvec_run.in \
	$(srcdir)/test_initialized_finalized_run.in \
	$(srcdir)/test_mpi_generate_datatype_run.in \
	$(srcdir)/test_mpi_smartdedup_run.in \
	$(srcdir)/test_perf_run.in $(srcdir)/test_perf_stripes_run.in \
	$(srcdir)/test_redist_collection_parallel_run.in \
	$(srcdir)/test_redist_collection_run.in \
	$(srcdir)/test_redist_collection_static_parallel_run.in \
	$(srcdir)/test_redist_collection_static_run.in \
	$(srcdir)/test_redist_p2p_parallel_run.in \
	$(srcdir)/test_redist_p2p_run.in \
	$(srcdir)/test_redist_repeat_parallel_run.in \
	$(srcdir)/test_redist_repeat_run.in $(srcdir)/test_sort_run.in \
	$(srcdir)/test_uid_run.in $(srcdir)/test_ut_run.in \
	$(srcdir)/test_xmap_all2all_fail_run.in \
	$(srcdir)/test_xmap_all2all_parallel_run.in \
	$(srcdir)/test_xmap_all2all_run.in \
	$(srcdir)/test_xmap_dist_dir_parallel_run.in \
	$(srcdir)/test_xmap_dist_dir_run.in \
	$(srcdir)/test_xmap_intersection_parallel_run.in \
	$(srcdir)/test_yaxt_run.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/m4/acx_assert_lang_is_fortran_variant.m4 \
	$(top_srcdir)/m4/acx_c_check_sizeof_gt_relation.m4 \
	$(top_srcdir)/m4/acx_c_package.m4 \
	$(top_srcdir)/m4/acx_cfortran_flags.m4 \
	$(top_srcdir)/m4/acx_check_cfortran.m4 \
	$(top_srcdir)/m4/acx_fc_integer_size.m4 \
	$(top_srcdir)/m4/acx_fc_type_kinds.m4 \
	$(top_srcdir)/m4/acx_fc_volatile.m4 \
	$(top_srcdir)/m4/acx_fortran2003_kinds.m4 \
	$(top_srcdir)/m4/acx_fortran_check_include.m4 \
	$(top_srcdir)/m4/acx_fortran_package.m4 \
	$(top_srcdir)/m4/acx_lang_check_include.m4 \
	$(top_srcdir)/m4/acx_lang_other_suffix_conftest.m4 \
	$(top_srcdir)/m4/acx_lang_package.m4 \
	$(top_srcdir)/m4/acx_lt_problems.m4 \
	$(top_srcdir)/m4/acx_mpi_defects.m4 \
	$(top_srcdir)/m4/acx_mpirun.m4 \
	$(top_srcdir)/m4/acx_option_search_libs.m4 \
	$(top_srcdir)/m4/acx_prog_fc_check_fpp.m4 \
	$(top_srcdir)/m4/acx_prog_fc_v_output.m4 \
	$(top_srcdir)/m4/acx_sl_fc_mod_path_flag.m4 \
	$(top_srcdir)/m4/acx_sl_mod_suffix.m4 \
	$(top_srcdir)/m4/asx_tr_arg.m4 $(top_srcdir)/m4/asx_unset.m4 \
	$(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_prog_perl_version.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/ax_tls.m4 \
	$(top_srcdir)/m4/ax_with_perl.m4 \
	$(top_srcdir)/m4/ax_with_prog.m4 \
	$(top_srcdir)/m4/gcc_ac_c_char_bit.m4 \
	$(top_srcdir)/m4/kpse_libtool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/starlink_fpp.m4 \
	$(top_srcdir)/m4/tj_find_type.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/m4/ac_fc_freeform.m4 \
	$(top_srcdir)/m4/acx_fc_library_ldflags.m4 \
	$(top_srcdir)/m4/ac_lang_program_fortran.m4 \
	$(top_srcdir)/m4/acx_lang_fortran_check_include.m4 \
	$(top_srcdir)/m4/acx_lang_c_check_include.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES = test_exchanger_parallel_run \
	test_redist_p2p_parallel_run \
	test_redist_collection_parallel_run \
	test_redist_collection_static_parallel_run \
	test_redist_repeat_parallel_run test_xmap_all2all_parallel_run \
	test_xmap_dist_dir_parallel_run \
	test_xmap_intersection_parallel_run \
	test_initialized_finalized_run test_idxempty_run \
	test_idxvec_run test_idxlist_collection_run test_idxmod_run \
	test_idxsection_run test_idxstripes_run \
	test_redist_collection_run test_redist_collection_static_run \
	test_redist_repeat_run test_redist_p2p_run \
	test_exported_symbols test_xmap_dist_dir_run \
	test_xmap_all2all_run test_xmap_all2all_fail_run \
	test_handles_run test_ut_run test_perf_run \
	test_perf_stripes_run test_sort_run test_uid_run test_yaxt_run \
	test_mpi_generate_datatype_run test_mpi_smartdedup_run
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libtestutil_a_AR = $(AR) $(ARFLAGS)
libtestutil_a_LIBADD =
am_libtestutil_a_OBJECTS = tests.$(OBJEXT) ftest_common.$(OBJEXT) \
	test_idxlist_utils.$(OBJEXT) test_idxlist_utils_f.$(OBJEXT) \
	test_xmap_common.$(OBJEXT) test_xmap_common_f.$(OBJEXT) \
	test_xmap_common_parallel.$(OBJEXT) \
	test_xmap_common_parallel_f.$(OBJEXT) \
	test_redist_common_f.$(OBJEXT)
libtestutil_a_OBJECTS = $(am_libtestutil_a_OBJECTS)
PROGRAMS = $(noinst_PROGRAMS)
am_test_exchanger_parallel_OBJECTS =  \
	test_exchanger_parallel.$(OBJEXT)
test_exchanger_parallel_OBJECTS =  \
	$(am_test_exchanger_parallel_OBJECTS)
test_exchanger_parallel_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
test_exchanger_parallel_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_handles_OBJECTS = test_handles.$(OBJEXT)
test_handles_OBJECTS = $(am_test_handles_OBJECTS)
test_handles_LDADD = $(LDADD)
test_handles_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_idxempty_OBJECTS = test_idxempty.$(OBJEXT)
test_idxempty_OBJECTS = $(am_test_idxempty_OBJECTS)
test_idxempty_LDADD = $(LDADD)
test_idxempty_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_idxempty_f_OBJECTS = test_idxempty_f.$(OBJEXT)
test_idxempty_f_OBJECTS = $(am_test_idxempty_f_OBJECTS)
am__DEPENDENCIES_2 = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
test_idxempty_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxlist_collection_OBJECTS =  \
	test_idxlist_collection.$(OBJEXT)
test_idxlist_collection_OBJECTS =  \
	$(am_test_idxlist_collection_OBJECTS)
test_idxlist_collection_LDADD = $(LDADD)
test_idxlist_collection_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_idxlist_collection_f_OBJECTS =  \
	test_idxlist_collection_f.$(OBJEXT)
test_idxlist_collection_f_OBJECTS =  \
	$(am_test_idxlist_collection_f_OBJECTS)
test_idxlist_collection_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxmod_OBJECTS = test_idxmod.$(OBJEXT)
test_idxmod_OBJECTS = $(am_test_idxmod_OBJECTS)
test_idxmod_LDADD = $(LDADD)
test_idxmod_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_idxmod_f_OBJECTS = test_idxmod_f.$(OBJEXT)
test_idxmod_f_OBJECTS = $(am_test_idxmod_f_OBJECTS)
test_idxmod_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxsection_OBJECTS = test_idxsection.$(OBJEXT)
test_idxsection_OBJECTS = $(am_test_idxsection_OBJECTS)
test_idxsection_LDADD = $(LDADD)
test_idxsection_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_idxsection_f_OBJECTS = test_idxsection_f.$(OBJEXT)
test_idxsection_f_OBJECTS = $(am_test_idxsection_f_OBJECTS)
test_idxsection_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxstripes_OBJECTS = test_idxstripes.$(OBJEXT)
test_idxstripes_OBJECTS = $(am_test_idxstripes_OBJECTS)
test_idxstripes_LDADD = $(LDADD)
test_idxstripes_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_idxstripes_f_OBJECTS = test_idxstripes_f.$(OBJEXT)
test_idxstripes_f_OBJECTS = $(am_test_idxstripes_f_OBJECTS)
test_idxstripes_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_idxvec_OBJECTS = test_idxvec.$(OBJEXT)
test_idxvec_OBJECTS = $(am_test_idxvec_OBJECTS)
test_idxvec_LDADD = $(LDADD)
test_idxvec_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_idxvec_f_OBJECTS = test_idxvec_f.$(OBJEXT)
test_idxvec_f_OBJECTS = $(am_test_idxvec_f_OBJECTS)
test_idxvec_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_initialized_finalized_OBJECTS =  \
	test_initialized_finalized.$(OBJEXT)
test_initialized_finalized_OBJECTS =  \
	$(am_test_initialized_finalized_OBJECTS)
test_initialized_finalized_LDADD = $(LDADD)
test_initialized_finalized_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_initialized_finalized_f_OBJECTS =  \
	test_initialized_finalized_f.$(OBJEXT)
test_initialized_finalized_f_OBJECTS =  \
	$(am_test_initialized_finalized_f_OBJECTS)
test_initialized_finalized_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_mpi_generate_datatype_OBJECTS =  \
	test_mpi_generate_datatype.$(OBJEXT)
test_mpi_generate_datatype_OBJECTS =  \
	$(am_test_mpi_generate_datatype_OBJECTS)
test_mpi_generate_datatype_LDADD = $(LDADD)
test_mpi_generate_datatype_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_mpi_smartdedup_OBJECTS = test_mpi_smartdedup.$(OBJEXT)
test_mpi_smartdedup_OBJECTS = $(am_test_mpi_smartdedup_OBJECTS)
test_mpi_smartdedup_LDADD = $(LDADD)
test_mpi_smartdedup_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_perf_OBJECTS = test_perf.$(OBJEXT)
test_perf_OBJECTS = $(am_test_perf_OBJECTS)
test_perf_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_perf_stripes_OBJECTS = test_perf_stripes.$(OBJEXT) \
	ftest_common.$(OBJEXT)
test_perf_stripes_OBJECTS = $(am_test_perf_stripes_OBJECTS)
test_perf_stripes_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_collection_OBJECTS = test_redist_collection.$(OBJEXT)
test_redist_collection_OBJECTS = $(am_test_redist_collection_OBJECTS)
test_redist_collection_LDADD = $(LDADD)
test_redist_collection_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_redist_collection_f_OBJECTS =  \
	test_redist_collection_f.$(OBJEXT)
test_redist_collection_f_OBJECTS =  \
	$(am_test_redist_collection_f_OBJECTS)
test_redist_collection_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_collection_parallel_OBJECTS =  \
	test_redist_collection_parallel.$(OBJEXT)
test_redist_collection_parallel_OBJECTS =  \
	$(am_test_redist_collection_parallel_OBJECTS)
test_redist_collection_parallel_LDADD = $(LDADD)
test_redist_collection_parallel_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_redist_collection_parallel_f_OBJECTS =  \
	test_redist_collection_parallel_f.$(OBJEXT)
test_redist_collection_parallel_f_OBJECTS =  \
	$(am_test_redist_collection_parallel_f_OBJECTS)
test_redist_collection_parallel_f_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_test_redist_collection_static_OBJECTS =  \
	test_redist_collection_static.$(OBJEXT)
test_redist_collection_static_OBJECTS =  \
	$(am_test_redist_collection_static_OBJECTS)
test_redist_collection_static_LDADD = $(LDADD)
test_redist_collection_static_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_redist_collection_static_f_OBJECTS =  \
	test_redist_collection_static_f.$(OBJEXT)
test_redist_collection_static_f_OBJECTS =  \
	$(am_test_redist_collection_static_f_OBJECTS)
test_redist_collection_static_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_collection_static_parallel_OBJECTS =  \
	test_redist_collection_static_parallel.$(OBJEXT)
test_redist_collection_static_parallel_OBJECTS =  \
	$(am_test_redist_collection_static_parallel_OBJECTS)
test_redist_collection_static_parallel_LDADD = $(LDADD)
test_redist_collection_static_parallel_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_redist_collection_static_parallel_f_OBJECTS =  \
	test_redist_collection_static_parallel_f.$(OBJEXT)
test_redist_collection_static_parallel_f_OBJECTS =  \
	$(am_test_redist_collection_static_parallel_f_OBJECTS)
test_redist_collection_static_parallel_f_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_test_redist_p2p_OBJECTS = test_redist_p2p.$(OBJEXT)
test_redist_p2p_OBJECTS = $(am_test_redist_p2p_OBJECTS)
test_redist_p2p_LDADD = $(LDADD)
test_redist_p2p_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_redist_p2p_f_OBJECTS = test_redist_p2p_f.$(OBJEXT)
test_redist_p2p_f_OBJECTS = $(am_test_redist_p2p_f_OBJECTS)
test_redist_p2p_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_p2p_parallel_OBJECTS =  \
	test_redist_p2p_parallel.$(OBJEXT)
test_redist_p2p_parallel_OBJECTS =  \
	$(am_test_redist_p2p_parallel_OBJECTS)
test_redist_p2p_parallel_LDADD = $(LDADD)
test_redist_p2p_parallel_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_redist_p2p_parallel_f_OBJECTS =  \
	test_redist_p2p_parallel_f.$(OBJEXT)
test_redist_p2p_parallel_f_OBJECTS =  \
	$(am_test_redist_p2p_parallel_f_OBJECTS)
test_redist_p2p_parallel_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_repeat_OBJECTS = test_redist_repeat.$(OBJEXT)
test_redist_repeat_OBJECTS = $(am_test_redist_repeat_OBJECTS)
test_redist_repeat_LDADD = $(LDADD)
test_redist_repeat_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_redist_repeat_f_OBJECTS = test_redist_repeat_f.$(OBJEXT)
test_redist_repeat_f_OBJECTS = $(am_test_redist_repeat_f_OBJECTS)
test_redist_repeat_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_redist_repeat_parallel_OBJECTS =  \
	test_redist_repeat_parallel.$(OBJEXT)
test_redist_repeat_parallel_OBJECTS =  \
	$(am_test_redist_repeat_parallel_OBJECTS)
test_redist_repeat_parallel_LDADD = $(LDADD)
test_redist_repeat_parallel_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_redist_repeat_parallel_f_OBJECTS =  \
	test_redist_repeat_parallel_f.$(OBJEXT)
test_redist_repeat_parallel_f_OBJECTS =  \
	$(am_test_redist_repeat_parallel_f_OBJECTS)
test_redist_repeat_parallel_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_sort_OBJECTS = test_sort.$(OBJEXT)
test_sort_OBJECTS = $(am_test_sort_OBJECTS)
test_sort_LDADD = $(LDADD)
test_sort_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_uid_OBJECTS = test_uid.$(OBJEXT)
test_uid_OBJECTS = $(am_test_uid_OBJECTS)
test_uid_LDADD = $(LDADD)
test_uid_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_ut_OBJECTS = test_ut.$(OBJEXT)
test_ut_OBJECTS = $(am_test_ut_OBJECTS)
test_ut_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_all2all_OBJECTS = test_xmap_all2all.$(OBJEXT)
test_xmap_all2all_OBJECTS = $(am_test_xmap_all2all_OBJECTS)
test_xmap_all2all_LDADD = $(LDADD)
test_xmap_all2all_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_xmap_all2all_f_OBJECTS = test_xmap_all2all_f.$(OBJEXT)
test_xmap_all2all_f_OBJECTS = $(am_test_xmap_all2all_f_OBJECTS)
test_xmap_all2all_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_all2all_fail_OBJECTS = test_xmap_all2all_fail.$(OBJEXT)
test_xmap_all2all_fail_OBJECTS = $(am_test_xmap_all2all_fail_OBJECTS)
test_xmap_all2all_fail_LDADD = $(LDADD)
test_xmap_all2all_fail_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_xmap_all2all_fail_f_OBJECTS =  \
	test_xmap_all2all_fail_f.$(OBJEXT)
test_xmap_all2all_fail_f_OBJECTS =  \
	$(am_test_xmap_all2all_fail_f_OBJECTS)
test_xmap_all2all_fail_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_all2all_parallel_OBJECTS =  \
	test_xmap_all2all_parallel.$(OBJEXT)
test_xmap_all2all_parallel_OBJECTS =  \
	$(am_test_xmap_all2all_parallel_OBJECTS)
test_xmap_all2all_parallel_LDADD = $(LDADD)
test_xmap_all2all_parallel_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_xmap_all2all_parallel_f_OBJECTS =  \
	test_xmap_all2all_parallel_f.$(OBJEXT)
test_xmap_all2all_parallel_f_OBJECTS =  \
	$(am_test_xmap_all2all_parallel_f_OBJECTS)
test_xmap_all2all_parallel_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_dist_dir_OBJECTS = test_xmap_dist_dir.$(OBJEXT)
test_xmap_dist_dir_OBJECTS = $(am_test_xmap_dist_dir_OBJECTS)
test_xmap_dist_dir_LDADD = $(LDADD)
test_xmap_dist_dir_DEPENDENCIES = libtestutil.a ../src/libyaxt.la \
	$(am__DEPENDENCIES_1)
am_test_xmap_dist_dir_f_OBJECTS = test_xmap_dist_dir_f.$(OBJEXT)
test_xmap_dist_dir_f_OBJECTS = $(am_test_xmap_dist_dir_f_OBJECTS)
test_xmap_dist_dir_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_dist_dir_parallel_OBJECTS =  \
	test_xmap_dist_dir_parallel.$(OBJEXT)
test_xmap_dist_dir_parallel_OBJECTS =  \
	$(am_test_xmap_dist_dir_parallel_OBJECTS)
test_xmap_dist_dir_parallel_LDADD = $(LDADD)
test_xmap_dist_dir_parallel_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_xmap_dist_dir_parallel_f_OBJECTS =  \
	test_xmap_dist_dir_parallel_f.$(OBJEXT)
test_xmap_dist_dir_parallel_f_OBJECTS =  \
	$(am_test_xmap_dist_dir_parallel_f_OBJECTS)
test_xmap_dist_dir_parallel_f_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_test_xmap_intersection_parallel_OBJECTS =  \
	test_xmap_intersection_parallel.$(OBJEXT)
test_xmap_intersection_parallel_OBJECTS =  \
	$(am_test_xmap_intersection_parallel_OBJECTS)
test_xmap_intersection_parallel_LDADD = $(LDADD)
test_xmap_intersection_parallel_DEPENDENCIES = libtestutil.a \
	../src/libyaxt.la $(am__DEPENDENCIES_1)
am_test_xmap_intersection_parallel_f_OBJECTS =  \
	test_xmap_intersection_parallel_f.$(OBJEXT)
test_xmap_intersection_parallel_f_OBJECTS =  \
	$(am_test_xmap_intersection_parallel_f_OBJECTS)
test_xmap_intersection_parallel_f_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_test_yaxt_OBJECTS = test_yaxt.$(OBJEXT) ftest_common.$(OBJEXT)
test_yaxt_OBJECTS = $(am_test_yaxt_OBJECTS)
test_yaxt_DEPENDENCIES = $(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libtestutil_a_SOURCES) $(test_exchanger_parallel_SOURCES) \
	$(test_handles_SOURCES) $(test_idxempty_SOURCES) \
	$(test_idxempty_f_SOURCES) $(test_idxlist_collection_SOURCES) \
	$(test_idxlist_collection_f_SOURCES) $(test_idxmod_SOURCES) \
	$(test_idxmod_f_SOURCES) $(test_idxsection_SOURCES) \
	$(test_idxsection_f_SOURCES) $(test_idxstripes_SOURCES) \
	$(test_idxstripes_f_SOURCES) $(test_idxvec_SOURCES) \
	$(test_idxvec_f_SOURCES) $(test_initialized_finalized_SOURCES) \
	$(test_initialized_finalized_f_SOURCES) \
	$(test_mpi_generate_datatype_SOURCES) \
	$(test_mpi_smartdedup_SOURCES) $(test_perf_SOURCES) \
	$(test_perf_stripes_SOURCES) $(test_redist_collection_SOURCES) \
	$(test_redist_collection_f_SOURCES) \
	$(test_redist_collection_parallel_SOURCES) \
	$(test_redist_collection_parallel_f_SOURCES) \
	$(test_redist_collection_static_SOURCES) \
	$(test_redist_collection_static_f_SOURCES) \
	$(test_redist_collection_static_parallel_SOURCES) \
	$(test_redist_collection_static_parallel_f_SOURCES) \
	$(test_redist_p2p_SOURCES) $(test_redist_p2p_f_SOURCES) \
	$(test_redist_p2p_parallel_SOURCES) \
	$(test_redist_p2p_parallel_f_SOURCES) \
	$(test_redist_repeat_SOURCES) $(test_redist_repeat_f_SOURCES) \
	$(test_redist_repeat_parallel_SOURCES) \
	$(test_redist_repeat_parallel_f_SOURCES) $(test_sort_SOURCES) \
	$(test_uid_SOURCES) $(test_ut_SOURCES) \
	$(test_xmap_all2all_SOURCES) $(test_xmap_all2all_f_SOURCES) \
	$(test_xmap_all2all_fail_SOURCES) \
	$(test_xmap_all2all_fail_f_SOURCES) \
	$(test_xmap_all2all_parallel_SOURCES) \
	$(test_xmap_all2all_parallel_f_SOURCES) \
	$(test_xmap_dist_dir_SOURCES) $(test_xmap_dist_dir_f_SOURCES) \
	$(test_xmap_dist_dir_parallel_SOURCES) \
	$(test_xmap_dist_dir_parallel_f_SOURCES) \
	$(test_xmap_intersection_parallel_SOURCES) \
	$(test_xmap_intersection_parallel_f_SOURCES) \
	$(test_yaxt_SOURCES)
DIST_SOURCES = $(libtestutil_a_SOURCES) \
	$(test_exchanger_parallel_SOURCES) $(test_handles_SOURCES) \
	$(test_idxempty_SOURCES) $(test_idxempty_f_SOURCES) \
	$(test_idxlist_collection_SOURCES) \
	$(test_idxlist_collection_f_SOURCES) $(test_idxmod_SOURCES) \
	$(test_idxmod_f_SOURCES) $(test_idxsection_SOURCES) \
	$(test_idxsection_f_SOURCES) $(test_idxstripes_SOURCES) \
	$(test_idxstripes_f_SOURCES) $(test_idxvec_SOURCES) \
	$(test_idxvec_f_SOURCES) $(test_initialized_finalized_SOURCES) \
	$(test_initialized_finalized_f_SOURCES) \
	$(test_mpi_generate_datatype_SOURCES) \
	$(test_mpi_smartdedup_SOURCES) $(test_perf_SOURCES) \
	$(test_perf_stripes_SOURCES) $(test_redist_collection_SOURCES) \
	$(test_redist_collection_f_SOURCES) \
	$(test_redist_collection_parallel_SOURCES) \
	$(test_redist_collection_parallel_f_SOURCES) \
	$(test_redist_collection_static_SOURCES) \
	$(test_redist_collection_static_f_SOURCES) \
	$(test_redist_collection_static_parallel_SOURCES) \
	$(test_redist_collection_static_parallel_f_SOURCES) \
	$(test_redist_p2p_SOURCES) $(test_redist_p2p_f_SOURCES) \
	$(test_redist_p2p_parallel_SOURCES) \
	$(test_redist_p2p_parallel_f_SOURCES) \
	$(test_redist_repeat_SOURCES) $(test_redist_repeat_f_SOURCES) \
	$(test_redist_repeat_parallel_SOURCES) \
	$(test_redist_repeat_parallel_f_SOURCES) $(test_sort_SOURCES) \
	$(test_uid_SOURCES) $(test_ut_SOURCES) \
	$(test_xmap_all2all_SOURCES) $(test_xmap_all2all_f_SOURCES) \
	$(test_xmap_all2all_fail_SOURCES) \
	$(test_xmap_all2all_fail_f_SOURCES) \
	$(test_xmap_all2all_parallel_SOURCES) \
	$(test_xmap_all2all_parallel_f_SOURCES) \
	$(test_xmap_dist_dir_SOURCES) $(test_xmap_dist_dir_f_SOURCES) \
	$(test_xmap_dist_dir_parallel_SOURCES) \
	$(test_xmap_dist_dir_parallel_f_SOURCES) \
	$(test_xmap_intersection_parallel_SOURCES) \
	$(test_xmap_intersection_parallel_f_SOURCES) \
	$(test_yaxt_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
# If stdout is a non-dumb tty, use colors.  If test -t is not supported,
# then this fails; a conservative approach.  Of course do not redirect
# stdout here, just stderr.
am__tty_colors = \
red=; grn=; lgn=; blu=; std=; \
test "X$(AM_COLOR_TESTS)" != Xno \
&& test "X$$TERM" != Xdumb \
&& { test "X$(AM_COLOR_TESTS)" = Xalways || test -t 1 2>/dev/null; } \
&& { \
  red='[0;31m'; \
  grn='[0;32m'; \
  lgn='[1;32m'; \
  blu='[1;34m'; \
  std='[m'; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
# Restructured Text title and section.
am__rst_title = sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
am__rst_section = sed 'p;s/./=/g;p;g'
# Put stdin (possibly several lines separated by ".  ") in a box.
# Prefix each line by 'col' and terminate each with 'std', for coloring.
# Multi line coloring is problematic with "less -R", so we really need
# to color each line individually.
am__text_box = $(AWK) '{			\
  n = split($$0, lines, "\\.  "); max = 0;	\
  for (i = 1; i <= n; ++i)			\
    if (max < length(lines[i]))			\
      max = length(lines[i]);			\
  for (i = 0; i < max; ++i)			\
    line = line "=";				\
  print col line std;				\
  for (i = 1; i <= n; ++i)			\
    if (lines[i])				\
      print col lines[i] std;			\
  print col line std;				\
}'
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log, and passes
# TESTS_ENVIRONMENT.  Save and restore TERM around use of
# TESTS_ENVIRONMENT, in case that unsets it.
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
srcdir=$(srcdir); export srcdir;			\
rm -f $@-t;						\
am__trap='rm -f '\''$(abs_builddir)/$@-t'\''; (exit $$st); exit $$st'; \
trap "st=129; $$am__trap" 1; trap "st=130; $$am__trap" 2;	\
trap "st=141; $$am__trap" 13; trap "st=143; $$am__trap" 15; \
am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;		\
test "x$$am__odir" = x. || $(MKDIR_P) "$$am__odir" || exit $$?;	\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; __SAVED_TERM=$$TERM;		\
$(TESTS_ENVIRONMENT)
# To be appended to the command running the test.  Handle the stdout
# and stderr redirection, and catch the exit status.
am__check_post = \
>$@-t 2>&1;						\
estatus=$$?;						\
if test -n '$(DISABLE_HARD_ERRORS)'			\
   && test $$estatus -eq 99; then			\
  estatus=1;						\
fi;							\
TERM=$$__SAVED_TERM; export TERM;			\
$(am__tty_colors);					\
xfailed=PASS;						\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    xfailed=XFAIL;;					\
esac;							\
case $$estatus.$$xfailed in				\
    0.XFAIL) col=$$red; res=XPASS;;			\
    0.*)     col=$$grn; res=PASS ;;			\
    77.*)    col=$$blu; res=SKIP ;;			\
    99.*)    col=$$red; res=FAIL ;;			\
    *.XFAIL) col=$$lgn; res=XFAIL;;			\
    *.*)     col=$$red; res=FAIL ;;			\
esac;							\
echo "$${col}$$res$${std}: $$f";			\
echo "$$res: $$f (exit: $$estatus)" |			\
  $(am__rst_section) >$@;				\
cat $@-t >>$@;						\
rm -f $@-t
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck check-html recheck-html
TEST_SUITE_HTML = $(TEST_SUITE_LOG:.log=.html)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
TEST_LOGS_TMP = $(TEST_LOGS:.log=.log-t)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_CC = @BUILD_CC@
BUILD_CFLAGS = @BUILD_CFLAGS@
BUILD_FC = @BUILD_FC@
BUILD_FCFLAGS = @BUILD_FCFLAGS@
BUILD_LDFLAGS = @BUILD_LDFLAGS@
BUILD_LIBS = @BUILD_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
C_CHAR_IS_UNSIGNED = @C_CHAR_IS_UNSIGNED@
C_LONG_IS_LARGER_THAN_INT = @C_LONG_IS_LARGER_THAN_INT@
C_LONG_LONG_IS_LARGER_THAN_LONG = @C_LONG_LONG_IS_LARGER_THAN_LONG@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_f90 = @FCFLAGS_f90@
FCLIBS = @FCLIBS@
FCMODCASE = @FCMODCASE@
FCMODEXT = @FCMODEXT@
FC_FPP_FLAG = @FC_FPP_FLAG@
FC_MOD_FLAG = @FC_MOD_FLAG@
FGREP = @FGREP@
FPP = @FPP@
FPPFLAGS = @FPPFLAGS@
FPP_DEFOPT = @FPP_DEFOPT@
FPP_INCOPT = @FPP_INCOPT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPIROOT = @MPIROOT@
MPI_C_INCLUDE = @MPI_C_INCLUDE@
MPI_C_LIB = @MPI_C_LIB@
MPI_FC_INCLUDE = @MPI_FC_INCLUDE@
MPI_FC_LIB = @MPI_FC_LIB@
MPI_FC_MOD = @MPI_FC_MOD@
MPI_LAUNCH = @MPI_LAUNCH@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PERL_VERSION = @PERL_VERSION@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_cv_nm_interface = @lt_cv_nm_interface@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LIBRARIES = libtestutil.a
libtestutil_a_SOURCES = tests.c ftest_common.f90 \
	test_idxlist_utils.c test_idxlist_utils_f.f90 \
	test_xmap_common.c test_xmap_common.h test_xmap_common_f.f90 \
	test_xmap_common_parallel.c test_xmap_common_parallel_f.f90 \
	test_redist_common_f.f90

test_exchanger_parallel_SOURCES = test_exchanger_parallel.c tests.h
test_idxempty_SOURCES = test_idxempty.c tests.h test_idxlist_utils.h
test_idxempty_f_SOURCES = test_idxempty_f.f90
test_idxempty_f_LDADD = $(XT_FC_LDADD)
test_idxvec_SOURCES = test_idxvec.c tests.h test_idxlist_utils.h
test_idxvec_f_SOURCES = test_idxvec_f.f90
test_idxvec_f_LDADD = $(XT_FC_LDADD)
test_idxlist_collection_SOURCES = test_idxlist_collection.c tests.h \
	test_idxlist_utils.h

test_idxlist_collection_f_SOURCES = test_idxlist_collection_f.f90
test_idxlist_collection_f_LDADD = $(XT_FC_LDADD)
test_idxmod_SOURCES = test_idxmod.c tests.h
test_idxmod_f_SOURCES = test_idxmod_f.f90
test_idxmod_f_LDADD = $(XT_FC_LDADD)
test_idxsection_SOURCES = test_idxsection.c tests.h test_idxlist_utils.h
test_idxsection_f_SOURCES = test_idxsection_f.f90
test_idxsection_f_LDADD = $(XT_FC_LDADD)
test_idxstripes_SOURCES = test_idxstripes.c tests.h test_idxlist_utils.h
test_idxstripes_f_SOURCES = test_idxstripes_f.f90
test_idxstripes_f_LDADD = $(XT_FC_LDADD)
test_redist_collection_SOURCES = test_redist_collection.c tests.h
test_redist_collection_f_SOURCES = test_redist_collection_f.f90
test_redist_collection_f_LDADD = $(XT_FC_LDADD)
test_redist_collection_parallel_SOURCES = test_redist_collection_parallel.c \
	tests.h

test_redist_collection_parallel_f_SOURCES = \
	test_redist_collection_parallel_f.f90

test_redist_collection_parallel_f_LDADD = $(XT_FC_LDADD)
test_redist_collection_static_SOURCES = test_redist_collection_static.c tests.h
test_redist_collection_static_f_SOURCES = test_redist_collection_static_f.f90
test_redist_collection_static_f_LDADD = $(XT_FC_LDADD)
test_redist_collection_static_parallel_SOURCES = \
	test_redist_collection_static_parallel.c tests.h

test_redist_collection_static_parallel_f_SOURCES = \
	test_redist_collection_static_parallel_f.f90

test_redist_collection_static_parallel_f_LDADD = $(XT_FC_LDADD)
test_redist_p2p_SOURCES = test_redist_p2p.c tests.h
test_redist_p2p_f_SOURCES = test_redist_p2p_f.f90
test_redist_p2p_f_LDADD = $(XT_FC_LDADD)
test_redist_p2p_parallel_SOURCES = test_redist_p2p_parallel.c tests.h
test_redist_p2p_parallel_f_SOURCES = test_redist_p2p_parallel_f.f90
test_redist_p2p_parallel_f_LDADD = $(XT_FC_LDADD)
test_redist_repeat_SOURCES = test_redist_repeat.c tests.h
test_redist_repeat_f_SOURCES = test_redist_repeat_f.f90
test_redist_repeat_f_LDADD = $(XT_FC_LDADD)
test_redist_repeat_parallel_SOURCES = test_redist_repeat_parallel.c tests.h
test_redist_repeat_parallel_f_SOURCES = test_redist_repeat_parallel_f.f90
test_redist_repeat_parallel_f_LDADD = $(XT_FC_LDADD)
test_xmap_all2all_SOURCES = test_xmap_all2all.c test_xmap_common.h
test_xmap_all2all_f_SOURCES = test_xmap_all2all_f.f90
test_xmap_all2all_f_LDADD = $(XT_FC_LDADD)
test_xmap_all2all_fail_SOURCES = test_xmap_all2all_fail.c tests.h
test_xmap_all2all_fail_f_SOURCES = test_xmap_all2all_fail_f.f90
test_xmap_all2all_fail_f_LDADD = $(XT_FC_LDADD)
test_xmap_all2all_parallel_SOURCES = test_xmap_all2all_parallel.c tests.h
test_xmap_all2all_parallel_f_SOURCES = test_xmap_all2all_parallel_f.f90
test_xmap_all2all_parallel_f_LDADD = $(XT_FC_LDADD)
test_xmap_dist_dir_SOURCES = test_xmap_dist_dir.c test_xmap_common.h
test_xmap_dist_dir_f_SOURCES = test_xmap_dist_dir_f.f90
test_xmap_dist_dir_f_LDADD = $(XT_FC_LDADD)
test_xmap_dist_dir_parallel_SOURCES = test_xmap_dist_dir_parallel.c tests.h
test_xmap_dist_dir_parallel_f_SOURCES = test_xmap_dist_dir_parallel_f.f90
test_xmap_dist_dir_parallel_f_LDADD = $(XT_FC_LDADD)
test_xmap_intersection_parallel_SOURCES = test_xmap_intersection_parallel.c tests.h
test_xmap_intersection_parallel_f_SOURCES = test_xmap_intersection_parallel_f.f90
test_xmap_intersection_parallel_f_LDADD = $(XT_FC_LDADD)
test_initialized_finalized_SOURCES = test_initialized_finalized.c tests.h
test_initialized_finalized_f_SOURCES = test_initialized_finalized_f.f90
test_initialized_finalized_f_LDADD = $(XT_FC_LDADD)
test_handles_SOURCES = test_handles.c tests.h
test_ut_SOURCES = test_ut.f90
test_ut_LDADD = $(XT_FC_LDADD)
test_perf_SOURCES = test_perf.f90
test_perf_LDADD = $(XT_FC_LDADD)
test_perf_stripes_SOURCES = test_perf_stripes.f90 ftest_common.f90
test_perf_stripes_LDADD = $(XT_FC_LDADD)
test_sort_SOURCES = test_sort.c tests.h
test_uid_SOURCES = test_uid.c
test_yaxt_SOURCES = test_yaxt.f90 ftest_common.f90
test_yaxt_LDADD = $(XT_FC_LDADD)
test_mpi_generate_datatype_SOURCES = test_mpi_generate_datatype.c tests.h
test_mpi_smartdedup_SOURCES = test_mpi_smartdedup.c tests.h
AM_CFLAGS = -I../inst_headers $(MPI_C_INCLUDE)
AM_FCFLAGS = $(FC_MOD_FLAG)../inst_headers/f90 $(MPI_FC_INCLUDE) $(MPI_FC_MOD)
LDADD = libtestutil.a ../src/libyaxt.la $(MPI_C_LIB)
XT_FC_LDADD = libtestutil.a ../src/libyaxt.la $(MPI_FC_LIB)
TESTS = \
	test_mpi_generate_datatype_run				\
	test_mpi_smartdedup_run					\
	test_exchanger_parallel_run				\
	test_handles_run					\
	test_idxempty_run					\
	test_idxvec_run						\
	test_idxlist_collection_run				\
	test_idxmod_run						\
	test_idxsection_run					\
	test_idxstripes_run					\
	test_redist_p2p_run					\
	test_redist_collection_run				\
	test_redist_collection_parallel_run			\
	test_redist_collection_static_run			\
	test_redist_collection_static_parallel_run		\
	test_redist_p2p_parallel_run				\
	test_redist_repeat_run					\
	test_redist_repeat_parallel_run				\
	test_xmap_all2all_run					\
	test_xmap_all2all_fail_run				\
	test_xmap_all2all_parallel_run				\
	test_xmap_dist_dir_run					\
	test_xmap_dist_dir_parallel_run				\
	test_xmap_intersection_parallel_run			\
	test_initialized_finalized_run				\
	test_exported_symbols					\
	test_ut_run						\
	test_perf_run						\
	test_perf_stripes_run					\
	test_sort_run						\
	test_uid_run						\
	test_yaxt_run

XFAIL_TESTS = \
	test_xmap_all2all_fail_run

AUTOMAKE_OPTIONS = color-tests
EXTRA_DIST = core
all: all-am

.SUFFIXES:
.SUFFIXES: .c .f90 .html .lo .log .o .obj .test .test$(EXEEXT)
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
test_exchanger_parallel_run: $(top_builddir)/config.status $(srcdir)/test_exchanger_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_p2p_parallel_run: $(top_builddir)/config.status $(srcdir)/test_redist_p2p_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_collection_parallel_run: $(top_builddir)/config.status $(srcdir)/test_redist_collection_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_collection_static_parallel_run: $(top_builddir)/config.status $(srcdir)/test_redist_collection_static_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_repeat_parallel_run: $(top_builddir)/config.status $(srcdir)/test_redist_repeat_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_all2all_parallel_run: $(top_builddir)/config.status $(srcdir)/test_xmap_all2all_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_dist_dir_parallel_run: $(top_builddir)/config.status $(srcdir)/test_xmap_dist_dir_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_intersection_parallel_run: $(top_builddir)/config.status $(srcdir)/test_xmap_intersection_parallel_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_initialized_finalized_run: $(top_builddir)/config.status $(srcdir)/test_initialized_finalized_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxempty_run: $(top_builddir)/config.status $(srcdir)/test_idxempty_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxvec_run: $(top_builddir)/config.status $(srcdir)/test_idxvec_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxlist_collection_run: $(top_builddir)/config.status $(srcdir)/test_idxlist_collection_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxmod_run: $(top_builddir)/config.status $(srcdir)/test_idxmod_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxsection_run: $(top_builddir)/config.status $(srcdir)/test_idxsection_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_idxstripes_run: $(top_builddir)/config.status $(srcdir)/test_idxstripes_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_collection_run: $(top_builddir)/config.status $(srcdir)/test_redist_collection_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_collection_static_run: $(top_builddir)/config.status $(srcdir)/test_redist_collection_static_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_repeat_run: $(top_builddir)/config.status $(srcdir)/test_redist_repeat_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_redist_p2p_run: $(top_builddir)/config.status $(srcdir)/test_redist_p2p_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_exported_symbols: $(top_builddir)/config.status $(srcdir)/test_exported_symbols.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_dist_dir_run: $(top_builddir)/config.status $(srcdir)/test_xmap_dist_dir_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_all2all_run: $(top_builddir)/config.status $(srcdir)/test_xmap_all2all_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_xmap_all2all_fail_run: $(top_builddir)/config.status $(srcdir)/test_xmap_all2all_fail_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_handles_run: $(top_builddir)/config.status $(srcdir)/test_handles_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_ut_run: $(top_builddir)/config.status $(srcdir)/test_ut_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_perf_run: $(top_builddir)/config.status $(srcdir)/test_perf_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_perf_stripes_run: $(top_builddir)/config.status $(srcdir)/test_perf_stripes_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_sort_run: $(top_builddir)/config.status $(srcdir)/test_sort_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_uid_run: $(top_builddir)/config.status $(srcdir)/test_uid_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_yaxt_run: $(top_builddir)/config.status $(srcdir)/test_yaxt_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_mpi_generate_datatype_run: $(top_builddir)/config.status $(srcdir)/test_mpi_generate_datatype_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
test_mpi_smartdedup_run: $(top_builddir)/config.status $(srcdir)/test_mpi_smartdedup_run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libtestutil.a: $(libtestutil_a_OBJECTS) $(libtestutil_a_DEPENDENCIES) $(EXTRA_libtestutil_a_DEPENDENCIES) 
	-rm -f libtestutil.a
	$(libtestutil_a_AR) libtestutil.a $(libtestutil_a_OBJECTS) $(libtestutil_a_LIBADD)
	$(RANLIB) libtestutil.a

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
test_exchanger_parallel$(EXEEXT): $(test_exchanger_parallel_OBJECTS) $(test_exchanger_parallel_DEPENDENCIES) $(EXTRA_test_exchanger_parallel_DEPENDENCIES) 
	@rm -f test_exchanger_parallel$(EXEEXT)
	$(LINK) $(test_exchanger_parallel_OBJECTS) $(test_exchanger_parallel_LDADD) $(LIBS)
test_handles$(EXEEXT): $(test_handles_OBJECTS) $(test_handles_DEPENDENCIES) $(EXTRA_test_handles_DEPENDENCIES) 
	@rm -f test_handles$(EXEEXT)
	$(LINK) $(test_handles_OBJECTS) $(test_handles_LDADD) $(LIBS)
test_idxempty$(EXEEXT): $(test_idxempty_OBJECTS) $(test_idxempty_DEPENDENCIES) $(EXTRA_test_idxempty_DEPENDENCIES) 
	@rm -f test_idxempty$(EXEEXT)
	$(LINK) $(test_idxempty_OBJECTS) $(test_idxempty_LDADD) $(LIBS)
test_idxempty_f$(EXEEXT): $(test_idxempty_f_OBJECTS) $(test_idxempty_f_DEPENDENCIES) $(EXTRA_test_idxempty_f_DEPENDENCIES) 
	@rm -f test_idxempty_f$(EXEEXT)
	$(FCLINK) $(test_idxempty_f_OBJECTS) $(test_idxempty_f_LDADD) $(LIBS)
test_idxlist_collection$(EXEEXT): $(test_idxlist_collection_OBJECTS) $(test_idxlist_collection_DEPENDENCIES) $(EXTRA_test_idxlist_collection_DEPENDENCIES) 
	@rm -f test_idxlist_collection$(EXEEXT)
	$(LINK) $(test_idxlist_collection_OBJECTS) $(test_idxlist_collection_LDADD) $(LIBS)
test_idxlist_collection_f$(EXEEXT): $(test_idxlist_collection_f_OBJECTS) $(test_idxlist_collection_f_DEPENDENCIES) $(EXTRA_test_idxlist_collection_f_DEPENDENCIES) 
	@rm -f test_idxlist_collection_f$(EXEEXT)
	$(FCLINK) $(test_idxlist_collection_f_OBJECTS) $(test_idxlist_collection_f_LDADD) $(LIBS)
test_idxmod$(EXEEXT): $(test_idxmod_OBJECTS) $(test_idxmod_DEPENDENCIES) $(EXTRA_test_idxmod_DEPENDENCIES) 
	@rm -f test_idxmod$(EXEEXT)
	$(LINK) $(test_idxmod_OBJECTS) $(test_idxmod_LDADD) $(LIBS)
test_idxmod_f$(EXEEXT): $(test_idxmod_f_OBJECTS) $(test_idxmod_f_DEPENDENCIES) $(EXTRA_test_idxmod_f_DEPENDENCIES) 
	@rm -f test_idxmod_f$(EXEEXT)
	$(FCLINK) $(test_idxmod_f_OBJECTS) $(test_idxmod_f_LDADD) $(LIBS)
test_idxsection$(EXEEXT): $(test_idxsection_OBJECTS) $(test_idxsection_DEPENDENCIES) $(EXTRA_test_idxsection_DEPENDENCIES) 
	@rm -f test_idxsection$(EXEEXT)
	$(LINK) $(test_idxsection_OBJECTS) $(test_idxsection_LDADD) $(LIBS)
test_idxsection_f$(EXEEXT): $(test_idxsection_f_OBJECTS) $(test_idxsection_f_DEPENDENCIES) $(EXTRA_test_idxsection_f_DEPENDENCIES) 
	@rm -f test_idxsection_f$(EXEEXT)
	$(FCLINK) $(test_idxsection_f_OBJECTS) $(test_idxsection_f_LDADD) $(LIBS)
test_idxstripes$(EXEEXT): $(test_idxstripes_OBJECTS) $(test_idxstripes_DEPENDENCIES) $(EXTRA_test_idxstripes_DEPENDENCIES) 
	@rm -f test_idxstripes$(EXEEXT)
	$(LINK) $(test_idxstripes_OBJECTS) $(test_idxstripes_LDADD) $(LIBS)
test_idxstripes_f$(EXEEXT): $(test_idxstripes_f_OBJECTS) $(test_idxstripes_f_DEPENDENCIES) $(EXTRA_test_idxstripes_f_DEPENDENCIES) 
	@rm -f test_idxstripes_f$(EXEEXT)
	$(FCLINK) $(test_idxstripes_f_OBJECTS) $(test_idxstripes_f_LDADD) $(LIBS)
test_idxvec$(EXEEXT): $(test_idxvec_OBJECTS) $(test_idxvec_DEPENDENCIES) $(EXTRA_test_idxvec_DEPENDENCIES) 
	@rm -f test_idxvec$(EXEEXT)
	$(LINK) $(test_idxvec_OBJECTS) $(test_idxvec_LDADD) $(LIBS)
test_idxvec_f$(EXEEXT): $(test_idxvec_f_OBJECTS) $(test_idxvec_f_DEPENDENCIES) $(EXTRA_test_idxvec_f_DEPENDENCIES) 
	@rm -f test_idxvec_f$(EXEEXT)
	$(FCLINK) $(test_idxvec_f_OBJECTS) $(test_idxvec_f_LDADD) $(LIBS)
test_initialized_finalized$(EXEEXT): $(test_initialized_finalized_OBJECTS) $(test_initialized_finalized_DEPENDENCIES) $(EXTRA_test_initialized_finalized_DEPENDENCIES) 
	@rm -f test_initialized_finalized$(EXEEXT)
	$(LINK) $(test_initialized_finalized_OBJECTS) $(test_initialized_finalized_LDADD) $(LIBS)
test_initialized_finalized_f$(EXEEXT): $(test_initialized_finalized_f_OBJECTS) $(test_initialized_finalized_f_DEPENDENCIES) $(EXTRA_test_initialized_finalized_f_DEPENDENCIES) 
	@rm -f test_initialized_finalized_f$(EXEEXT)
	$(FCLINK) $(test_initialized_finalized_f_OBJECTS) $(test_initialized_finalized_f_LDADD) $(LIBS)
test_mpi_generate_datatype$(EXEEXT): $(test_mpi_generate_datatype_OBJECTS) $(test_mpi_generate_datatype_DEPENDENCIES) $(EXTRA_test_mpi_generate_datatype_DEPENDENCIES) 
	@rm -f test_mpi_generate_datatype$(EXEEXT)
	$(LINK) $(test_mpi_generate_datatype_OBJECTS) $(test_mpi_generate_datatype_LDADD) $(LIBS)
test_mpi_smartdedup$(EXEEXT): $(test_mpi_smartdedup_OBJECTS) $(test_mpi_smartdedup_DEPENDENCIES) $(EXTRA_test_mpi_smartdedup_DEPENDENCIES) 
	@rm -f test_mpi_smartdedup$(EXEEXT)
	$(LINK) $(test_mpi_smartdedup_OBJECTS) $(test_mpi_smartdedup_LDADD) $(LIBS)
test_perf$(EXEEXT): $(test_perf_OBJECTS) $(test_perf_DEPENDENCIES) $(EXTRA_test_perf_DEPENDENCIES) 
	@rm -f test_perf$(EXEEXT)
	$(FCLINK) $(test_perf_OBJECTS) $(test_perf_LDADD) $(LIBS)
test_perf_stripes$(EXEEXT): $(test_perf_stripes_OBJECTS) $(test_perf_stripes_DEPENDENCIES) $(EXTRA_test_perf_stripes_DEPENDENCIES) 
	@rm -f test_perf_stripes$(EXEEXT)
	$(FCLINK) $(test_perf_stripes_OBJECTS) $(test_perf_stripes_LDADD) $(LIBS)
test_redist_collection$(EXEEXT): $(test_redist_collection_OBJECTS) $(test_redist_collection_DEPENDENCIES) $(EXTRA_test_redist_collection_DEPENDENCIES) 
	@rm -f test_redist_collection$(EXEEXT)
	$(LINK) $(test_redist_collection_OBJECTS) $(test_redist_collection_LDADD) $(LIBS)
test_redist_collection_f$(EXEEXT): $(test_redist_collection_f_OBJECTS) $(test_redist_collection_f_DEPENDENCIES) $(EXTRA_test_redist_collection_f_DEPENDENCIES) 
	@rm -f test_redist_collection_f$(EXEEXT)
	$(FCLINK) $(test_redist_collection_f_OBJECTS) $(test_redist_collection_f_LDADD) $(LIBS)
test_redist_collection_parallel$(EXEEXT): $(test_redist_collection_parallel_OBJECTS) $(test_redist_collection_parallel_DEPENDENCIES) $(EXTRA_test_redist_collection_parallel_DEPENDENCIES) 
	@rm -f test_redist_collection_parallel$(EXEEXT)
	$(LINK) $(test_redist_collection_parallel_OBJECTS) $(test_redist_collection_parallel_LDADD) $(LIBS)
test_redist_collection_parallel_f$(EXEEXT): $(test_redist_collection_parallel_f_OBJECTS) $(test_redist_collection_parallel_f_DEPENDENCIES) $(EXTRA_test_redist_collection_parallel_f_DEPENDENCIES) 
	@rm -f test_redist_collection_parallel_f$(EXEEXT)
	$(FCLINK) $(test_redist_collection_parallel_f_OBJECTS) $(test_redist_collection_parallel_f_LDADD) $(LIBS)
test_redist_collection_static$(EXEEXT): $(test_redist_collection_static_OBJECTS) $(test_redist_collection_static_DEPENDENCIES) $(EXTRA_test_redist_collection_static_DEPENDENCIES) 
	@rm -f test_redist_collection_static$(EXEEXT)
	$(LINK) $(test_redist_collection_static_OBJECTS) $(test_redist_collection_static_LDADD) $(LIBS)
test_redist_collection_static_f$(EXEEXT): $(test_redist_collection_static_f_OBJECTS) $(test_redist_collection_static_f_DEPENDENCIES) $(EXTRA_test_redist_collection_static_f_DEPENDENCIES) 
	@rm -f test_redist_collection_static_f$(EXEEXT)
	$(FCLINK) $(test_redist_collection_static_f_OBJECTS) $(test_redist_collection_static_f_LDADD) $(LIBS)
test_redist_collection_static_parallel$(EXEEXT): $(test_redist_collection_static_parallel_OBJECTS) $(test_redist_collection_static_parallel_DEPENDENCIES) $(EXTRA_test_redist_collection_static_parallel_DEPENDENCIES) 
	@rm -f test_redist_collection_static_parallel$(EXEEXT)
	$(LINK) $(test_redist_collection_static_parallel_OBJECTS) $(test_redist_collection_static_parallel_LDADD) $(LIBS)
test_redist_collection_static_parallel_f$(EXEEXT): $(test_redist_collection_static_parallel_f_OBJECTS) $(test_redist_collection_static_parallel_f_DEPENDENCIES) $(EXTRA_test_redist_collection_static_parallel_f_DEPENDENCIES) 
	@rm -f test_redist_collection_static_parallel_f$(EXEEXT)
	$(FCLINK) $(test_redist_collection_static_parallel_f_OBJECTS) $(test_redist_collection_static_parallel_f_LDADD) $(LIBS)
test_redist_p2p$(EXEEXT): $(test_redist_p2p_OBJECTS) $(test_redist_p2p_DEPENDENCIES) $(EXTRA_test_redist_p2p_DEPENDENCIES) 
	@rm -f test_redist_p2p$(EXEEXT)
	$(LINK) $(test_redist_p2p_OBJECTS) $(test_redist_p2p_LDADD) $(LIBS)
test_redist_p2p_f$(EXEEXT): $(test_redist_p2p_f_OBJECTS) $(test_redist_p2p_f_DEPENDENCIES) $(EXTRA_test_redist_p2p_f_DEPENDENCIES) 
	@rm -f test_redist_p2p_f$(EXEEXT)
	$(FCLINK) $(test_redist_p2p_f_OBJECTS) $(test_redist_p2p_f_LDADD) $(LIBS)
test_redist_p2p_parallel$(EXEEXT): $(test_redist_p2p_parallel_OBJECTS) $(test_redist_p2p_parallel_DEPENDENCIES) $(EXTRA_test_redist_p2p_parallel_DEPENDENCIES) 
	@rm -f test_redist_p2p_parallel$(EXEEXT)
	$(LINK) $(test_redist_p2p_parallel_OBJECTS) $(test_redist_p2p_parallel_LDADD) $(LIBS)
test_redist_p2p_parallel_f$(EXEEXT): $(test_redist_p2p_parallel_f_OBJECTS) $(test_redist_p2p_parallel_f_DEPENDENCIES) $(EXTRA_test_redist_p2p_parallel_f_DEPENDENCIES) 
	@rm -f test_redist_p2p_parallel_f$(EXEEXT)
	$(FCLINK) $(test_redist_p2p_parallel_f_OBJECTS) $(test_redist_p2p_parallel_f_LDADD) $(LIBS)
test_redist_repeat$(EXEEXT): $(test_redist_repeat_OBJECTS) $(test_redist_repeat_DEPENDENCIES) $(EXTRA_test_redist_repeat_DEPENDENCIES) 
	@rm -f test_redist_repeat$(EXEEXT)
	$(LINK) $(test_redist_repeat_OBJECTS) $(test_redist_repeat_LDADD) $(LIBS)
test_redist_repeat_f$(EXEEXT): $(test_redist_repeat_f_OBJECTS) $(test_redist_repeat_f_DEPENDENCIES) $(EXTRA_test_redist_repeat_f_DEPENDENCIES) 
	@rm -f test_redist_repeat_f$(EXEEXT)
	$(FCLINK) $(test_redist_repeat_f_OBJECTS) $(test_redist_repeat_f_LDADD) $(LIBS)
test_redist_repeat_parallel$(EXEEXT): $(test_redist_repeat_parallel_OBJECTS) $(test_redist_repeat_parallel_DEPENDENCIES) $(EXTRA_test_redist_repeat_parallel_DEPENDENCIES) 
	@rm -f test_redist_repeat_parallel$(EXEEXT)
	$(LINK) $(test_redist_repeat_parallel_OBJECTS) $(test_redist_repeat_parallel_LDADD) $(LIBS)
test_redist_repeat_parallel_f$(EXEEXT): $(test_redist_repeat_parallel_f_OBJECTS) $(test_redist_repeat_parallel_f_DEPENDENCIES) $(EXTRA_test_redist_repeat_parallel_f_DEPENDENCIES) 
	@rm -f test_redist_repeat_parallel_f$(EXEEXT)
	$(FCLINK) $(test_redist_repeat_parallel_f_OBJECTS) $(test_redist_repeat_parallel_f_LDADD) $(LIBS)
test_sort$(EXEEXT): $(test_sort_OBJECTS) $(test_sort_DEPENDENCIES) $(EXTRA_test_sort_DEPENDENCIES) 
	@rm -f test_sort$(EXEEXT)
	$(LINK) $(test_sort_OBJECTS) $(test_sort_LDADD) $(LIBS)
test_uid$(EXEEXT): $(test_uid_OBJECTS) $(test_uid_DEPENDENCIES) $(EXTRA_test_uid_DEPENDENCIES) 
	@rm -f test_uid$(EXEEXT)
	$(LINK) $(test_uid_OBJECTS) $(test_uid_LDADD) $(LIBS)
test_ut$(EXEEXT): $(test_ut_OBJECTS) $(test_ut_DEPENDENCIES) $(EXTRA_test_ut_DEPENDENCIES) 
	@rm -f test_ut$(EXEEXT)
	$(FCLINK) $(test_ut_OBJECTS) $(test_ut_LDADD) $(LIBS)
test_xmap_all2all$(EXEEXT): $(test_xmap_all2all_OBJECTS) $(test_xmap_all2all_DEPENDENCIES) $(EXTRA_test_xmap_all2all_DEPENDENCIES) 
	@rm -f test_xmap_all2all$(EXEEXT)
	$(LINK) $(test_xmap_all2all_OBJECTS) $(test_xmap_all2all_LDADD) $(LIBS)
test_xmap_all2all_f$(EXEEXT): $(test_xmap_all2all_f_OBJECTS) $(test_xmap_all2all_f_DEPENDENCIES) $(EXTRA_test_xmap_all2all_f_DEPENDENCIES) 
	@rm -f test_xmap_all2all_f$(EXEEXT)
	$(FCLINK) $(test_xmap_all2all_f_OBJECTS) $(test_xmap_all2all_f_LDADD) $(LIBS)
test_xmap_all2all_fail$(EXEEXT): $(test_xmap_all2all_fail_OBJECTS) $(test_xmap_all2all_fail_DEPENDENCIES) $(EXTRA_test_xmap_all2all_fail_DEPENDENCIES) 
	@rm -f test_xmap_all2all_fail$(EXEEXT)
	$(LINK) $(test_xmap_all2all_fail_OBJECTS) $(test_xmap_all2all_fail_LDADD) $(LIBS)
test_xmap_all2all_fail_f$(EXEEXT): $(test_xmap_all2all_fail_f_OBJECTS) $(test_xmap_all2all_fail_f_DEPENDENCIES) $(EXTRA_test_xmap_all2all_fail_f_DEPENDENCIES) 
	@rm -f test_xmap_all2all_fail_f$(EXEEXT)
	$(FCLINK) $(test_xmap_all2all_fail_f_OBJECTS) $(test_xmap_all2all_fail_f_LDADD) $(LIBS)
test_xmap_all2all_parallel$(EXEEXT): $(test_xmap_all2all_parallel_OBJECTS) $(test_xmap_all2all_parallel_DEPENDENCIES) $(EXTRA_test_xmap_all2all_parallel_DEPENDENCIES) 
	@rm -f test_xmap_all2all_parallel$(EXEEXT)
	$(LINK) $(test_xmap_all2all_parallel_OBJECTS) $(test_xmap_all2all_parallel_LDADD) $(LIBS)
test_xmap_all2all_parallel_f$(EXEEXT): $(test_xmap_all2all_parallel_f_OBJECTS) $(test_xmap_all2all_parallel_f_DEPENDENCIES) $(EXTRA_test_xmap_all2all_parallel_f_DEPENDENCIES) 
	@rm -f test_xmap_all2all_parallel_f$(EXEEXT)
	$(FCLINK) $(test_xmap_all2all_parallel_f_OBJECTS) $(test_xmap_all2all_parallel_f_LDADD) $(LIBS)
test_xmap_dist_dir$(EXEEXT): $(test_xmap_dist_dir_OBJECTS) $(test_xmap_dist_dir_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_DEPENDENCIES) 
	@rm -f test_xmap_dist_dir$(EXEEXT)
	$(LINK) $(test_xmap_dist_dir_OBJECTS) $(test_xmap_dist_dir_LDADD) $(LIBS)
test_xmap_dist_dir_f$(EXEEXT): $(test_xmap_dist_dir_f_OBJECTS) $(test_xmap_dist_dir_f_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_f_DEPENDENCIES) 
	@rm -f test_xmap_dist_dir_f$(EXEEXT)
	$(FCLINK) $(test_xmap_dist_dir_f_OBJECTS) $(test_xmap_dist_dir_f_LDADD) $(LIBS)
test_xmap_dist_dir_parallel$(EXEEXT): $(test_xmap_dist_dir_parallel_OBJECTS) $(test_xmap_dist_dir_parallel_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_parallel_DEPENDENCIES) 
	@rm -f test_xmap_dist_dir_parallel$(EXEEXT)
	$(LINK) $(test_xmap_dist_dir_parallel_OBJECTS) $(test_xmap_dist_dir_parallel_LDADD) $(LIBS)
test_xmap_dist_dir_parallel_f$(EXEEXT): $(test_xmap_dist_dir_parallel_f_OBJECTS) $(test_xmap_dist_dir_parallel_f_DEPENDENCIES) $(EXTRA_test_xmap_dist_dir_parallel_f_DEPENDENCIES) 
	@rm -f test_xmap_dist_dir_parallel_f$(EXEEXT)
	$(FCLINK) $(test_xmap_dist_dir_parallel_f_OBJECTS) $(test_xmap_dist_dir_parallel_f_LDADD) $(LIBS)
test_xmap_intersection_parallel$(EXEEXT): $(test_xmap_intersection_parallel_OBJECTS) $(test_xmap_intersection_parallel_DEPENDENCIES) $(EXTRA_test_xmap_intersection_parallel_DEPENDENCIES) 
	@rm -f test_xmap_intersection_parallel$(EXEEXT)
	$(LINK) $(test_xmap_intersection_parallel_OBJECTS) $(test_xmap_intersection_parallel_LDADD) $(LIBS)
test_xmap_intersection_parallel_f$(EXEEXT): $(test_xmap_intersection_parallel_f_OBJECTS) $(test_xmap_intersection_parallel_f_DEPENDENCIES) $(EXTRA_test_xmap_intersection_parallel_f_DEPENDENCIES) 
	@rm -f test_xmap_intersection_parallel_f$(EXEEXT)
	$(FCLINK) $(test_xmap_intersection_parallel_f_OBJECTS) $(test_xmap_intersection_parallel_f_LDADD) $(LIBS)
test_yaxt$(EXEEXT): $(test_yaxt_OBJECTS) $(test_yaxt_DEPENDENCIES) $(EXTRA_test_yaxt_DEPENDENCIES) 
	@rm -f test_yaxt$(EXEEXT)
	$(FCLINK) $(test_yaxt_OBJECTS) $(test_yaxt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_exchanger_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_handles.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxempty.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxlist_collection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxlist_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxmod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxsection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxstripes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_idxvec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_initialized_finalized.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mpi_generate_datatype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mpi_smartdedup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_collection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_collection_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_collection_static.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_collection_static_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_p2p.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_p2p_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_repeat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_redist_repeat_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_uid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_all2all.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_all2all_fail.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_all2all_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_common_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_dist_dir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_dist_dir_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_xmap_intersection_parallel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tests.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.f90.o:
	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

.f90.obj:
	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) `$(CYGPATH_W) '$<'`

.f90.lo:
	$(LTFCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__sh_e_setup);						\
	list='$(TEST_LOGS)';						\
	results=`for f in $$list; do					\
		   test -r $$f && read line < $$f && echo "$$line"	\
		     || echo FAIL;					\
		 done`;							\
	all=`echo "$$results" | sed '/^$$/d' | wc -l | sed -e 's/^[	 ]*//'`; \
	fail=`echo "$$results" | grep -c '^FAIL'`;			\
	pass=`echo "$$results" | grep -c '^PASS'`;			\
	skip=`echo "$$results" | grep -c '^SKIP'`;			\
	xfail=`echo "$$results" | grep -c '^XFAIL'`;			\
	xpass=`echo "$$results" | grep -c '^XPASS'`;			\
	failures=`expr $$fail + $$xpass`;				\
	all=`expr $$all - $$skip`;					\
	if test "$$all" -eq 1; then tests=test; All=;			\
	else tests=tests; All="All "; fi;				\
	case fail=$$fail:xpass=$$xpass:xfail=$$xfail in			\
	  fail=0:xpass=0:xfail=0)					\
	    msg="$$All$$all $$tests passed.  ";				\
	    exit=true;;							\
	  fail=0:xpass=0:xfail=*)					\
	    msg="$$All$$all $$tests behaved as expected";		\
	    if test "$$xfail" -eq 1; then xfailures=failure;		\
	    else xfailures=failures; fi;				\
	    msg="$$msg ($$xfail expected $$xfailures).  ";		\
	    exit=true;;							\
	  fail=*:xpass=0:xfail=*)					\
	    msg="$$fail of $$all $$tests failed.  ";			\
	    exit=false;;						\
	  fail=*:xpass=*:xfail=*)					\
	    msg="$$failures of $$all $$tests did not behave as expected"; \
	    if test "$$xpass" -eq 1; then xpasses=pass;			\
	    else xpasses=passes; fi;					\
	    msg="$$msg ($$xpass unexpected $$xpasses).  ";		\
	    exit=false;;						\
	  *)								\
	    echo >&2 "incorrect case"; exit 4;;				\
	esac;								\
	if test "$$skip" -ne 0; then					\
	  if test "$$skip" -eq 1; then					\
	    msg="$$msg($$skip test was not run).  ";			\
	  else								\
	    msg="$$msg($$skip tests were not run).  ";			\
	  fi;								\
	fi;								\
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  echo "$$msg";							\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for f in $$list; do						\
	    test -r $$f && read line < $$f || line=;			\
	    case $$line in						\
	      PASS:*|XFAIL:*);;						\
	      *) echo; cat $$f;;					\
	    esac;							\
	  done;								\
	} >$(TEST_SUITE_LOG).tmp;					\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if test "$$failures" -ne 0; then				\
	  msg="$${msg}See $(subdir)/$(TEST_SUITE_LOG).  ";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    msg="$${msg}Please report to $(PACKAGE_BUGREPORT).  ";	\
	  fi;								\
	fi;								\
	test x"$$VERBOSE" = x || $$exit || cat $(TEST_SUITE_LOG);	\
	$(am__tty_colors);						\
	if $$exit; then							\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	fi;								\
	echo "$$msg" | $(am__text_box) "col=$$col" "std=$$std";		\
	$$exit || exit 1

check-TESTS recheck:
	@if test $@ != recheck; then \
	   list='$(RECHECK_LOGS)'; test -z "$$list" || rm -f $$list; \
	 fi
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@list='' list2='$(TEST_LOGS)'; for f in $$list2; do \
	  test .log = $$f && continue; \
	  if test $@ = recheck; then \
	    test -f $$f || continue; \
	    if test -r $$f && read line < $$f; then \
	      case $$line in FAIL*|XPASS*) : ;; *) continue;; esac; \
	    fi; \
	  fi; \
	  if test -z "$$list"; then list=$$f; else list="$$list $$f"; fi; \
	done; \
	if test $@ = recheck && test -n "$$list"; then \
	  $(am__make_dryrun) || rm -f $$list || exit 1; \
	fi; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$list"
recheck: 

am--mostlyclean-test-html:
	list='$(TEST_LOGS:.log=.html)'; test -z "$$list" || rm -f $$list
	rm -f $(TEST_SUITE_HTML)

.log.html:
	@list='$(RST2HTML) $$RST2HTML rst2html rst2html.py';		\
	for r2h in $$list; do						\
	  if ($$r2h --version) >/dev/null 2>&1; then			\
	    R2H=$$r2h;							\
	  fi;								\
	done;								\
	if test -z "$$R2H"; then					\
	  echo >&2 "cannot find rst2html, cannot create $@";		\
	  exit 2;							\
	fi;								\
	$$R2H $< >$@.tmp
	@mv $@.tmp $@

# Be sure to run check first, and then to convert the result.
# Beware of concurrent executions.  Run "check" not "check-TESTS", as
# check-SCRIPTS and other dependencies are rebuilt by the former only.
# And expect check to fail.
check-html recheck-html:
	@target=`echo $@ | sed 's/-html$$//'`; \
	rv=0; $(MAKE) $(AM_MAKEFLAGS) $$target || rv=$$?; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_HTML) TEST_LOGS= || exit 4; \
	exit $$rv
test_mpi_generate_datatype_run.log: test_mpi_generate_datatype_run
	@p='test_mpi_generate_datatype_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_mpi_smartdedup_run.log: test_mpi_smartdedup_run
	@p='test_mpi_smartdedup_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_exchanger_parallel_run.log: test_exchanger_parallel_run
	@p='test_exchanger_parallel_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_handles_run.log: test_handles_run
	@p='test_handles_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_idxempty_run.log: test_idxempty_run
	@p='test_idxempty_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_idxvec_run.log: test_idxvec_run
	@p='test_idxvec_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_idxlist_collection_run.log: test_idxlist_collection_run
	@p='test_idxlist_collection_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_idxmod_run.log: test_idxmod_run
	@p='test_idxmod_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_idxsection_run.log: test_idxsection_run
	@p='test_idxsection_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_idxstripes_run.log: test_idxstripes_run
	@p='test_idxstripes_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_redist_p2p_run.log: test_redist_p2p_run
	@p='test_redist_p2p_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_redist_collection_run.log: test_redist_collection_run
	@p='test_redist_collection_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_redist_collection_parallel_run.log: test_redist_collection_parallel_run
	@p='test_redist_collection_parallel_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_redist_collection_static_run.log: test_redist_collection_static_run
	@p='test_redist_collection_static_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_redist_collection_static_parallel_run.log: test_redist_collection_static_parallel_run
	@p='test_redist_collection_static_parallel_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_redist_p2p_parallel_run.log: test_redist_p2p_parallel_run
	@p='test_redist_p2p_parallel_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_redist_repeat_run.log: test_redist_repeat_run
	@p='test_redist_repeat_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_redist_repeat_parallel_run.log: test_redist_repeat_parallel_run
	@p='test_redist_repeat_parallel_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_xmap_all2all_run.log: test_xmap_all2all_run
	@p='test_xmap_all2all_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_xmap_all2all_fail_run.log: test_xmap_all2all_fail_run
	@p='test_xmap_all2all_fail_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_xmap_all2all_parallel_run.log: test_xmap_all2all_parallel_run
	@p='test_xmap_all2all_parallel_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_xmap_dist_dir_run.log: test_xmap_dist_dir_run
	@p='test_xmap_dist_dir_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_xmap_dist_dir_parallel_run.log: test_xmap_dist_dir_parallel_run
	@p='test_xmap_dist_dir_parallel_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_xmap_intersection_parallel_run.log: test_xmap_intersection_parallel_run
	@p='test_xmap_intersection_parallel_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_initialized_finalized_run.log: test_initialized_finalized_run
	@p='test_initialized_finalized_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_exported_symbols.log: test_exported_symbols
	@p='test_exported_symbols'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_ut_run.log: test_ut_run
	@p='test_ut_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_perf_run.log: test_perf_run
	@p='test_perf_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_perf_stripes_run.log: test_perf_stripes_run
	@p='test_perf_stripes_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_sort_run.log: test_sort_run
	@p='test_sort_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_uid_run.log: test_uid_run
	@p='test_uid_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
test_yaxt_run.log: test_yaxt_run
	@p='test_yaxt_run'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
.test.log:
	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS_TMP)" || rm -f $(TEST_LOGS_TMP)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: am--mostlyclean-test-html mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am check-html install-am install-strip recheck-html

.PHONY: CTAGS GTAGS all all-am am--mostlyclean-test-html check \
	check-TESTS check-am check-html clean clean-generic \
	clean-libtool clean-local clean-noinstLIBRARIES \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck recheck-html tags uninstall uninstall-am


./$(DEPDIR)/FC.deps: $(SOURCES) Makefile
	@unique=`for i in $(SOURCES); do \
	  if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | grep '\.f90$$' ` ; \
	  FC="$(FC)" FPP="$(FPP)" \
	  $(PERL) -I$(top_srcdir)/scripts \
	  $(top_srcdir)/scripts/makef90depends --ignore-module iso_c_binding \
	  --fc-mod-flag=$(FC_MOD_FLAG) --fc-def-opt=$(FPP_DEFOPT) \
	  --fc-inc-flag=$(FPP_INCOPT) --fc-mod-suf='.$(FCMODEXT)' \
	  --fc-mod-case=$(FCMODCASE) --prog-fpp='$(FPP)' \
	  --`test $(C_LONG_IS_LARGER_THAN_INT) = 1 || echo \
	  no`fpp-long-is-larger-than-int \
	  --`test $(C_LONG_LONG_IS_LARGER_THAN_LONG) = 1 || echo \
	  no`fpp-long-long-is-larger-than-long \
	  --fpp-char-is-`test $(C_CHAR_IS_UNSIGNED) = 0 || echo un`signed \
	  --strip-obj-dirname --parse-cache=./$(DEPDIR)/FC.depdb \
	  --obj-suf='.$(OBJEXT)' -- \
	  $(AM_FCFLAGS) $(FCFLAGS) $(FPPFLAGS) -- $$unique \
	  >./$(DEPDIR)/FC.deps.temp
	cmp ./$(DEPDIR)/FC.deps.temp ./$(DEPDIR)/FC.deps >/dev/null 2>&1 \
	  || ln -f ./$(DEPDIR)/FC.deps.temp ./$(DEPDIR)/FC.deps

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FC.deps@am__quote@

clean-local:
	-rm -f *.$(FCMODEXT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
